{"version":3,"file":"static/js/483.e31da0db.chunk.js","mappings":"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","sources":["components/redux/Selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactListElem/ContactListElem.module.css?183c","components/ContactListElem/ContactListElem.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","components/Modal/Modal.js","webpack://react-homework-template/./src/Pages/Contacts/Conatacts.module.css?af2b","Pages/Contacts/Contacts.js","components/Section/Section.js"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters;","// extracted by mini-css-extract-plugin\nexport default {\"ContForm\":\"ContactForm_ContForm__Mnx27\",\"Container\":\"ContactForm_Container__lWShK\",\"LblForm\":\"ContactForm_LblForm__hKoul\",\"BtnForm\":\"ContactForm_BtnForm__VqJJc\",\"id\":\"ContactForm_id__C-m9Q\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from '../redux/Selectors';\nimport { addContact } from '../redux/Operations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ phone }) => phone === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, phone: formNumber }));\n    form.reset();\n  };\n\n  return (\n    <form  className={css.ContForm} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.LblForm}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -]?[a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </label>\n        <br />\n      <label className={css.LblForm}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </label>\n      <button  className={css.BtnForm} type=\"submit\">Add contact</button>\n    </form>\n  );\n};\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"SrchForm\":\"Filter_SrchForm__7iVsA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../redux/FilterSlice';\nimport { selectContactsFilter } from '../redux/Selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <label className={css.SrchForm}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter a name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"LiContact\":\"ContactListElem_LiContact__HWgY7\",\"DelContact\":\"ContactListElem_DelContact__8PxZD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/Operations';\nimport css from './ContactListElem.module.css';\n\nexport const ContactsListElem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = (userId) => {\n    dispatch(deleteContact(userId));\n  };\n \n\n  return (\n        <div className={css.LiContact} key={id}>\n          <p>\n            <span>{name}:</span>\n            <span>{phone}</span>\n          </p>\n      <button className={css.DelContact} onClick={() => handleDeleteContact(id)}\n        type=\"button\">\n            Delete\n          </button>\n        </div>\n  );\n};\n\nContactsListElem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactsList\":\"ContactList_ContactsList__ps99x\"};","import { useSelector } from 'react-redux';\nimport { selectContactsFilter, selectContactsList } from '../redux/Selectors';\nimport { ContactsListElem } from '../ContactListElem/ContactListElem';\nimport css from './ContactList.module.css'\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ul className={css.ContactsList}>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListElem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};","// extracted by mini-css-extract-plugin\nexport default {\"PageContainer\":\"Conatacts_PageContainer__GwSeA\",\"NavWrapper\":\"Conatacts_NavWrapper__DnstJ\",\"Title\":\"Conatacts_Title__c6ozW\",\"FilterWrapper\":\"Conatacts_FilterWrapper__WBFO1\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../components/redux/Operations';\nimport { selectError, selectIsLoading } from '../../components/redux/Selectors';\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Modal } from 'components/Modal/Modal';\nimport css from './Conatacts.module.css'\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <div className={css.PageContainer}>\n      <Section>\n        <div className={css.NavWrapper}>\n          <h1 className={css.Title}>Contacts</h1>\n          <div className={css.FilterWrapper}>\n            <Filter />\n            <button type=\"button\" onClick={handleOpenModal}>\n              <svg />\n              New Contact\n            </button>\n          </div>\n        </div>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;","import PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","ContactForm","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref","alert","concat","_ref2","phone","addContact","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Filter","filter","onChange","currentTarget","normalizedValue","toLowerCase","trim","setContactsFilter","ContactsListElem","id","onClick","handleDeleteContact","userId","deleteContact","ContactList","visibleContacts","contact","includes","map","Modal","onCloseModal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","Contacts","isShowModalAddUser","setIsShowModalAddUser","useState","fetchContacts","handleOpenModal","prev","Section"],"sourceRoot":""}