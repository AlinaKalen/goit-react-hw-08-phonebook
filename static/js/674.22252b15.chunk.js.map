{"version":3,"file":"static/js/674.22252b15.chunk.js","mappings":"6MAKA,MAsDA,EAtDkBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAtBaC,IACnBA,EAAEC,iBAEF,MAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAKC,IACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKC,KAAI,kBAAiB,IAEnEC,OAAM,KACLJ,EAAAA,OAAAA,QAAe,8BAA8B,IAGjDV,EAAKe,OAAO,EAIkBC,aAAa,MAAKC,SAAA,EAC9CrB,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLN,KAAK,QACLO,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,wBAGhB3B,EAAAA,EAAAA,MAAA,SAAAqB,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLN,KAAK,WACLO,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,2BAGhBL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,WACtBC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,YAAWR,SAAC,kCAChB,ECjDX,EAJcS,KACLR,EAAAA,EAAAA,KAACzB,EAAS,G","sources":["components/LoginForm/LoginForm.js","Pages/Login/Login.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logIn } from '../redux/authentication/AutOperations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n        />\n      </label>\n      <button type=\"submit\">LogIn</button>\n      <Link to=\"/register\">Don`t have acount? Register</Link>\n    </form>\n  );\n};\n\nexport default LoginForm;\n// import { Notify } from 'notiflix';\n// import { useDispatch } from 'react-redux';\n// import { logIn } from '../redux/authentication/AutOperations';\n\n// const LoginForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();  \n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const form = e.currentTarget;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     try {\n//       await dispatch(logIn({ email, password }));\n//       Notify.success('Login successful');\n//       navigate('/');  \n//     } catch (error) {\n//       Notify.failure('Incorrect login or password');\n//     }\n\n//     form.reset();\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label>\n//         Email\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n//           title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n//           required\n//           placeholder=\"Enter email ...\"\n//         />\n//       </label>\n//       <label>\n//         Password\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n//           title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n//           required\n//           placeholder=\"Enter password ...\"\n//         />\n//       </label>\n//       <button type=\"submit\">LogIn</button>\n//       <Link to=\"/register\">Don't have an account? Register</Link>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;"],"names":["LoginForm","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","concat","user","name","catch","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Link","to","Login"],"sourceRoot":""}